@page "/counter"
@rendermode InteractiveAuto

<PageTitle>Counter</PageTitle>

@inject ILogger<Counter> _logger

@if (!isLoaded){
    <article class="content d-flex justify-content-center align-items-center mt-5">
        <div class="spinner-border spinner-border-lg text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </article>
}
@if(isLoaded){
    <article class="content">
        <h1>Counter</h1>

        <p role="status">Current count: @currentCount</p>

        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    </article>
}

@code {
    private int currentCount = 0;
    private bool isLoaded = false;

    protected override void OnInitialized()
    {
        _logger.LogDebug("Counter page initialized");
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _logger.LogDebug("Counter page first render. Loading is completed.");
            isLoaded = true;

            StateHasChanged();
        }
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}